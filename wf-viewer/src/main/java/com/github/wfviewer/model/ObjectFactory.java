//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.1.4-b02-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2010.07.27 at 10:06:37 PM EEST 
//


package com.github.wfviewer.model;

import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlElementDecl;
import javax.xml.bind.annotation.XmlRegistry;
import javax.xml.namespace.QName;


/**
 * This object contains factory methods for each 
 * Java content interface and Java element interface 
 * generated in the ua.cetelem.model package. 
 * <p>An ObjectFactory allows you to programatically 
 * construct new instances of the Java representation 
 * for XML content. The Java representation of XML 
 * content can consist of schema derived interfaces 
 * and classes representing the binding of schema 
 * type definitions, element declarations and model 
 * groups.  Factory methods for each of these are 
 * provided in this class.
 * 
 */
@XmlRegistry
public class ObjectFactory {

    private final static QName _Class_QNAME = new QName("", "Class");

    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: ua.cetelem.model
     * 
     */
    public ObjectFactory() {
    }

    /**
     * Create an instance of {@link GroupRef }
     * 
     */
    public GroupRef createGroupRef() {
        return new GroupRef();
    }

    /**
     * Create an instance of {@link Size }
     * 
     */
    public Size createSize() {
        return new Size();
    }

    /**
     * Create an instance of {@link ESUsage }
     * 
     */
    public ESUsage createESUsage() {
        return new ESUsage();
    }

    /**
     * Create an instance of {@link DocumentCase }
     * 
     */
    public DocumentCase createDocumentCase() {
        return new DocumentCase();
    }

    /**
     * Create an instance of {@link Offset }
     * 
     */
    public Offset createOffset() {
        return new Offset();
    }

    /**
     * Create an instance of {@link IDLFieldType }
     * 
     */
    public IDLFieldType createIDLFieldType() {
        return new IDLFieldType();
    }

    /**
     * Create an instance of {@link ExternalMap }
     * 
     */
    public ExternalMap createExternalMap() {
        return new ExternalMap();
    }

    /**
     * Create an instance of {@link FieldName }
     * 
     */
    public FieldName createFieldName() {
        return new FieldName();
    }

    /**
     * Create an instance of {@link FieldViewAccess }
     * 
     */
    public FieldViewAccess createFieldViewAccess() {
        return new FieldViewAccess();
    }

    /**
     * Create an instance of {@link ESType }
     * 
     */
    public ESType createESType() {
        return new ESType();
    }

    /**
     * Create an instance of {@link FieldSet }
     * 
     */
    public FieldSet createFieldSet() {
        return new FieldSet();
    }

    /**
     * Create an instance of {@link Description }
     * 
     */
    public Description createDescription() {
        return new Description();
    }

    /**
     * Create an instance of {@link UI }
     * 
     */
    public UI createUI() {
        return new UI();
    }

    /**
     * Create an instance of {@link IDLField }
     * 
     */
    public IDLField createIDLField() {
        return new IDLField();
    }

    /**
     * Create an instance of {@link StepLength }
     * 
     */
    public StepLength createStepLength() {
        return new StepLength();
    }

    /**
     * Create an instance of {@link ESGroup }
     * 
     */
    public ESGroup createESGroup() {
        return new ESGroup();
    }

    /**
     * Create an instance of {@link Actions }
     * 
     */
    public Actions createActions() {
        return new Actions();
    }

    /**
     * Create an instance of {@link OnPage }
     * 
     */
    public OnPage createOnPage() {
        return new OnPage();
    }

    /**
     * Create an instance of {@link DocFieldsDef }
     * 
     */
    public DocFieldsDef createDocFieldsDef() {
        return new DocFieldsDef();
    }

    /**
     * Create an instance of {@link Property }
     * 
     */
    public Property createProperty() {
        return new Property();
    }

    /**
     * Create an instance of {@link ESOffset }
     * 
     */
    public ESOffset createESOffset() {
        return new ESOffset();
    }

    /**
     * Create an instance of {@link Version }
     * 
     */
    public Version createVersion() {
        return new Version();
    }

    /**
     * Create an instance of {@link Deprecated }
     * 
     */
    public Deprecated createDeprecated() {
        return new Deprecated();
    }

    /**
     * Create an instance of {@link FieldGroup }
     * 
     */
    public FieldGroup createFieldGroup() {
        return new FieldGroup();
    }

    /**
     * Create an instance of {@link Plain }
     * 
     */
    public Plain createPlain() {
        return new Plain();
    }

    /**
     * Create an instance of {@link BusinessLogic }
     * 
     */
    public BusinessLogic createBusinessLogic() {
        return new BusinessLogic();
    }

    /**
     * Create an instance of {@link Action }
     * 
     */
    public Action createAction() {
        return new Action();
    }

    /**
     * Create an instance of {@link UIRWComponent }
     * 
     */
    public UIRWComponent createUIRWComponent() {
        return new UIRWComponent();
    }

    /**
     * Create an instance of {@link ExtendView }
     * 
     */
    public ExtendView createExtendView() {
        return new ExtendView();
    }

    /**
     * Create an instance of {@link Group }
     * 
     */
    public Group createGroup() {
        return new Group();
    }

    /**
     * Create an instance of {@link BusinessLogics }
     * 
     */
    public BusinessLogics createBusinessLogics() {
        return new BusinessLogics();
    }

    /**
     * Create an instance of {@link DBRelationChildFor }
     * 
     */
    public DBRelationChildFor createDBRelationChildFor() {
        return new DBRelationChildFor();
    }

    /**
     * Create an instance of {@link ExpertSystem }
     * 
     */
    public ExpertSystem createExpertSystem() {
        return new ExpertSystem();
    }

    /**
     * Create an instance of {@link FieldUIComponents }
     * 
     */
    public FieldUIComponents createFieldUIComponents() {
        return new FieldUIComponents();
    }

    /**
     * Create an instance of {@link TargetPage }
     * 
     */
    public TargetPage createTargetPage() {
        return new TargetPage();
    }

    /**
     * Create an instance of {@link ESSize }
     * 
     */
    public ESSize createESSize() {
        return new ESSize();
    }

    /**
     * Create an instance of {@link FieldMapping }
     * 
     */
    public FieldMapping createFieldMapping() {
        return new FieldMapping();
    }

    /**
     * Create an instance of {@link IDLTypeMapping }
     * 
     */
    public IDLTypeMapping createIDLTypeMapping() {
        return new IDLTypeMapping();
    }

    /**
     * Create an instance of {@link FieldDef }
     * 
     */
    public FieldDef createFieldDef() {
        return new FieldDef();
    }

    /**
     * Create an instance of {@link UIROComponent }
     * 
     */
    public UIROComponent createUIROComponent() {
        return new UIROComponent();
    }

    /**
     * Create an instance of {@link ESDefaultValue }
     * 
     */
    public ESDefaultValue createESDefaultValue() {
        return new ESDefaultValue();
    }

    /**
     * Create an instance of {@link Count }
     * 
     */
    public Count createCount() {
        return new Count();
    }

    /**
     * Create an instance of {@link FormView }
     * 
     */
    public FormView createFormView() {
        return new FormView();
    }

    /**
     * Create an instance of {@link BufferSize }
     * 
     */
    public BufferSize createBufferSize() {
        return new BufferSize();
    }

    /**
     * Create an instance of {@link ESFieldName }
     * 
     */
    public ESFieldName createESFieldName() {
        return new ESFieldName();
    }

    /**
     * Create an instance of {@link DBFieldType }
     * 
     */
    public DBFieldType createDBFieldType() {
        return new DBFieldType();
    }

    /**
     * Create an instance of {@link FieldCase }
     * 
     */
    public FieldCase createFieldCase() {
        return new FieldCase();
    }

    /**
     * Create an instance of {@link FieldSetRef }
     * 
     */
    public FieldSetRef createFieldSetRef() {
        return new FieldSetRef();
    }

    /**
     * Create an instance of {@link IccConfig }
     * 
     */
    public IccConfig createIccConfig() {
        return new IccConfig();
    }

    /**
     * Create an instance of {@link Cracking }
     * 
     */
    public Cracking createCracking() {
        return new Cracking();
    }

    /**
     * Create an instance of {@link Field }
     * 
     */
    public Field createField() {
        return new Field();
    }

    /**
     * Create an instance of {@link DBFieldLength }
     * 
     */
    public DBFieldLength createDBFieldLength() {
        return new DBFieldLength();
    }

    /**
     * Create an instance of {@link Ref }
     * 
     */
    public Ref createRef() {
        return new Ref();
    }

    /**
     * Create an instance of {@link Case }
     * 
     */
    public Case createCase() {
        return new Case();
    }

    /**
     * Create an instance of {@link Type }
     * 
     */
    public Type createType() {
        return new Type();
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "Class")
    public JAXBElement<String> createClass(String value) {
        return new JAXBElement<String>(_Class_QNAME, String.class, null, value);
    }

}
